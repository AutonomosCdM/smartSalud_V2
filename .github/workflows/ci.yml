name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test-agent:
    name: Test Cloudflare Agent
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'agent/package-lock.json'

      - name: Install dependencies
        working-directory: ./agent
        run: npm ci

      - name: Run linting
        working-directory: ./agent
        run: npm run lint || echo "Linting not configured yet"

      - name: Run tests
        working-directory: ./agent
        run: npm test || echo "Tests not configured yet"

      - name: Type check
        working-directory: ./agent
        run: npm run type-check || npx tsc --noEmit || echo "TypeScript check not configured yet"

  test-backend:
    name: Test FastAPI Backend
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'backend/requirements.txt'

      - name: Install dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || echo "No requirements.txt yet"
          pip install pytest pytest-cov || true

      - name: Run tests
        working-directory: ./backend
        run: pytest tests/ --cov=app --cov-report=xml || echo "Tests not configured yet"

      - name: Upload coverage
        uses: codecov/codecov-action@v4
        if: success()
        with:
          files: ./backend/coverage.xml
          flags: backend
          fail_ci_if_error: false

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          severity: 'CRITICAL,HIGH'
          exit-code: '0'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  lint-markdown:
    name: Lint Markdown
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Lint markdown files
        uses: avto-dev/markdown-lint@v1
        with:
          args: '**/*.md'
          ignore: 'node_modules'
